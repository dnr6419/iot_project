version: '3'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile
    command: gunicorn iot.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.web
    depends_on:
      - db
      
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
    tty: true
    environment:
      - TZ=Asia/Seoul
    
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 8001:80
    depends_on:
      - web
  binwalk:
    build: 
      context: ./binwalk
      dockerfile: Dockerfile
    volumes:
      - media_volume:/root/firmwares
    command: app.py
    expose:
      - 8100
    depends_on:
      - web
  scanner:
    build:
      context: ./scanner
      dockerfile: Dockerfile
    tty: true
    stdin_open: true
    volumes:
      - ./scanner/:/project

volumes:
  postgres_data:
  static_volume:
  media_volume:
